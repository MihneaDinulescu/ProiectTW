<h2>Calendar</h2>
<p>Observație: se afișează doar luna curentă (evenimentele sunt random)</p>
<div id="calendar">
    <div>L</div>
    <div>Ma</div>
    <div>Mi</div>
    <div>J</div>
    <div>V</div>
    <div>S</div>
    <div>D</div>
<% 
// Definim numărul de zile în fiecare lună
let nrZile = [31,28,31,30,31,30,31,31,30,31,30,31];

// Obținem data curentă
let d = new Date();

// Extragem anul și luna curentă
let anCurent = d.getFullYear();
let lunaCurenta = d.getMonth();

// Verificăm dacă anul curent este bisect
if (anCurent % 400 == 0 || (anCurent % 4 == 0 && anCurent % 100 != 0)) {
    nrZile[1] = 29; // Februarie are 29 de zile în an bisect
}

// Funcție pentru a găsi prima zi de luni din luna dată
function primaLuni(data) {
    let date = new Date(data.getFullYear(), data.getMonth(), 1);
    while (date.getDay() !== 1) {
        date.setDate(date.getDate() + 1);
    }
    return date;
}

// Funcție pentru a găsi ultimele două weekenduri din luna dată
function ultimeleDouaWeekenduri(data) {
    let ultimaZi = new Date(data.getFullYear(), data.getMonth() + 1, 0); // Ultima zi din luna
    let weekenduri = [];
    while (weekenduri.length < 4) {
        if (ultimaZi.getDay() === 6 || ultimaZi.getDay() === 0) { // Dacă este sâmbătă sau duminică
            weekenduri.push(new Date(ultimaZi));
        }
        ultimaZi.setDate(ultimaZi.getDate() - 1);
    }
    return weekenduri.reverse().slice(0, 4);
}

// Evenimentul 'Reducere de început' în prima zi de luni din fiecare lună
let evenimentReducereStart = { data: primaLuni(d), text: 'Reducere de inceput' };

// Evenimentul 'Promoție weekend' în ultimele două weekenduri din fiecare lună
let evenimentePromotieWeekend = ultimeleDouaWeekenduri(d).map(date => ({ data: date, text: 'Promotie Weekend' }));

// Trei evenimente alese manual
let evenimenteAlese = [
    { data: new Date(anCurent, lunaCurenta, 10), text: 'Show de moda' },
    { data: new Date(anCurent, lunaCurenta, 15), text: 'Colectie noua' },
    { data: new Date(anCurent, lunaCurenta, 25), text: 'Eveniment VIP' }
];

// Combinăm toate evenimentele într-un singur array
let toateEvenimentele = [evenimentReducereStart, ...evenimentePromotieWeekend, ...evenimenteAlese];

// Obținem ziua săptămânii pentru prima zi a lunii curente
let primaZiLuna = new Date(anCurent, lunaCurenta, 1);
let ziSaptPrimaZiLuna = primaZiLuna.getDay();
if (ziSaptPrimaZiLuna === 0) {
    ziSaptPrimaZiLuna = 7; // Ajustăm pentru a începe săptămâna de la Luni
}

// Parcurgem zilele din luna curentă și afișăm evenimentele
for (let i = 1; i < ziSaptPrimaZiLuna; i++) {
    %>
    <div></div> 
    <% } 

    for (let i = 1; i <= nrZile[lunaCurenta]; i++) {
        let ziCurenta = new Date(anCurent, lunaCurenta, i);
        let obiectEveniment = toateEvenimentele.find(ev => ev.data.getTime() === ziCurenta.getTime());
        if (obiectEveniment) {
        %>
        <div class="zi eveniment" title="<%= obiectEveniment.text %>"><%= i %></div> 
        <%
        } else {
    %>
    <div class="zi"><%= i %></div> 
    <% } 
} %>
</div>
<%
// Obținem ora curentă a serverului
let dataServer = new Date();
let sirData = `${dataServer.getHours()}:${dataServer.getMinutes()}:${dataServer.getSeconds()}`;
%>
